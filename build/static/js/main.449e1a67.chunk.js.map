{"version":3,"sources":["services/phonebook.js","components/Persons.js","components/Filter.js","components/PersonForm.js","components/Notification.js","App.js","index.js"],"names":["baseUrl","service","getAllEntries","axios","get","createEntry","newEntry","post","updateEntry","id","put","deleteEntry","delete","Persons","persons","map","person","name","number","onClick","Filter","handleChange","onChange","PersonForm","props","onSubmit","handlePersonAdd","value","newName","newNumber","type","Notification","notification","className","message","App","useState","setPersons","setNewName","setNewNumber","newFilter","setNewFilter","setNotification","filteredPersons","filter","toLowerCase","includes","useEffect","contactsService","then","response","data","catch","error","console","log","handleFieldsChange","target","event","preventDefault","foundPerson","find","updatedPerson","window","confirm","setTimeout","concat","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.449e1a67.chunk.js","sourcesContent":["import axios from 'axios';\n\nconst baseUrl = '/api/persons';\n// const baseUrl = 'http://localhost:3001/api/persons';\n\nconst getAllEntries = () => {\n  return axios.get(baseUrl);\n};\n\nconst createEntry = newEntry => {\n  return axios.post(baseUrl, newEntry);\n};\n\nconst updateEntry = (id, newEntry) => {\n  return axios.put(`${baseUrl}/${id}`, newEntry);\n};\n\nconst deleteEntry = (id) => {\n  return axios.delete(`${baseUrl}/${id}`);\n};\n\nconst service = { getAllEntries, createEntry, updateEntry, deleteEntry }\n\nexport default service;\n","import React from 'react';\n\nconst Persons = ({ persons, deleteEntry }) => (\n  <ul>\n    {persons.map(person =>\n      <li key={person.name}>\n        {person.name} {person.number}\n        <button onClick={() => deleteEntry(person.id)}>delete</button>\n      </li>)}\n  </ul>\n);\n\nexport default Persons;\n","import React from 'react';\n\nconst Filter = ({ handleChange }) => (\n  <div>\n    filter shown with: <input name=\"filter\" onChange={handleChange} />\n  </div>\n);\n\nexport default Filter;\n","import React from 'react';\n\nconst PersonForm = (props) => (\n  <form onSubmit={props.handlePersonAdd}>\n    <div>\n      name: <input name='name' value={props.newName}\n                   onChange={props.handleChange} />\n    </div>\n    <div>\n      number: <input name='number' value={props.newNumber}\n                     onChange={props.handleChange} />\n    </div>\n    <div>\n      <button type=\"submit\">add</button>\n    </div>\n  </form>\n);\n\nexport default PersonForm;\n","import React from 'react';\n\nconst Notification = ({ notification }) => {\n  if (notification === null) {\n    return null;\n  }\n\n  return (\n    <div className={notification.type === 'error' ? 'error' : 'success'}>\n      {notification.message}\n    </div>\n  );\n};\n\nexport default Notification;\n","import React, { useState, useEffect } from 'react';\n\nimport contactsService from './services/phonebook';\nimport Persons from './components/Persons';\nimport Filter from './components/Filter';\nimport PersonForm from './components/PersonForm';\nimport Notification from './components/Notification';\n\nconst App = () => {\n  const [persons, setPersons] = useState([]);\n  const [newName, setNewName] = useState('');\n  const [newNumber, setNewNumber] = useState('');\n  const [newFilter, setNewFilter] = useState('');\n  const [notification, setNotification] = useState(null);\n  const filteredPersons = (persons.filter(({ name }) =>\n    name.toLowerCase().includes(newFilter)));\n\n  useEffect(() => {\n    contactsService.getAllEntries()\n      .then(response => {\n        setPersons(response.data);\n      })\n      .catch(error => {\n        console.log('error: ', error);\n      });\n  }, []);\n\n  const addPerson = (event) => {\n    event.preventDefault();\n\n    const foundPerson = persons.find(person => person.name === newName);\n    const updatedPerson = { ...foundPerson, number: newNumber };\n\n    if (foundPerson) {\n      if (window.confirm(\n        `${newName} is already added to phonebook, replace phone number to new one?`\n      )) {\n        contactsService.updateEntry(foundPerson.id, updatedPerson)\n          .then(response => {\n            setPersons(persons.map(person => person.id !== response.data.id\n              ? person\n              : response.data));\n          })\n          .catch(error => {\n            setNotification({\n                type: 'error',\n                message: `Contact '${foundPerson.name}' was already deleted from server`\n              }\n            );\n            setPersons(persons.filter(person => person.id !== foundPerson.id));\n            setTimeout(() => {\n              setNotification(null);\n            }, 3000);\n          });\n      }\n    } else {\n      const person = { name: newName, number: newNumber };\n\n      contactsService.createEntry(person)\n        .then(response => {\n          setPersons(persons.concat(response.data));\n          setNotification({\n              type: 'success',\n              message: `Contact '${response.data.name}' was added successfully`\n            }\n          );\n          setTimeout(() => {\n            setNotification(null);\n          }, 3000);\n          setNewName('');\n          setNewNumber('');\n        })\n        .catch(error => {\n          console.log('error: ', error);\n        });\n    }\n  };\n\n  const deleteEntry = (id) => {\n    if (window.confirm(`Really delete ${persons.find(person => person.id === id).name}?`)) {\n      contactsService.deleteEntry(id)\n        .then(() => {\n          setPersons(persons.filter(person => person.id !== id));\n        })\n        .catch(error => {\n          console.log('error: ', error);\n        });\n    }\n  };\n\n  const handleFieldsChange = ({ target }) => {\n    const { name, value } = target;\n\n    switch (name) {\n      case 'name':\n        setNewName(value);\n        break;\n      case 'number':\n        setNewNumber(value);\n        break;\n      case 'filter':\n        setNewFilter(value);\n        break;\n      default:\n        break;\n    }\n  };\n\n  return (\n    <div>\n      <h2>Phonebook</h2>\n      <Notification notification={notification} />\n      <Filter handleChange={handleFieldsChange} />\n      <h3>Add a new</h3>\n      <PersonForm handleChange={handleFieldsChange} newName={newName}\n                  newNumber={newNumber} handlePersonAdd={addPerson} />\n      <h2>Numbers</h2>\n      <Persons persons={filteredPersons} deleteEntry={deleteEntry} />\n    </div>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}